작업 단계
https://docs.aws.amazon.com/ko_kr/AmazonRDS/latest/UserGuide/CHAP_GettingStarted.CreatingConnecting.MySQL.html

1. mysql 설정
    - oracle db는 직접

2. flask 설정
    - aws에 설정
    1+2 = 서비스 로직
        : emp table을 사용했던 기존 소스를 재사용
        : github에 업로드
        : aws ec2 인스턴스에 배포

3. ELK 구축
    - 명령어 정리해서 txt 배포
    - q&a 가능

===========================

[1] RDS 구축
    1. mysql 생성
    2. 퍼블릭 접속 가능하게 수정
    3. TCP 즉 인터넷 상에서 client와 server가 통신하는 규칙의 port인 3306을 등록 (외부에서 엑세스 가능하게)
    4. DBeaver에 mysql 접속 설정
        endpoint, port, id, pw로 접속
    5. playdata라는 database 생성
        - table 생성 및 데이터 insert, commit

[2] flask db 연동 코드 재사용
    1. 로컬 시스템 오라클 접속을 aws 원격 시스템 활용해서 코드 수정

[3] aws EC2에 flask 실행 환경 구축(서비스 배포)
    1. end user들이 인터넷 상에서 aws 서버에 접속하고 flask가 서비스하게 되는 구조

    2. 작업 단계 / 실행 프로세스
        1) aws에 linux기반 os 설치
        2) os에 python 실행 환경 구축
        3) flask library 설정
        4) 개발한 소스를 aws의 해당 server에 배포
        5) 실행 및 end user가 브라우저로 접속 및 서비스 즉 요청/응답 수행 가능

    3. 실제 aws 세팅작업
        1) 키페어를 로컬 시스템에 다운로드 받음
            - 권한 부여해줘야 함
            - linux에서는 명령어 한 줄로 권한 부여 가능
            - window에서는 수작업
                - 키페어 파일 보안 탭에서 상속 관계 무효화 후 접근 가능 계정 일부 제거
                - cmd를 관리자로 실행
                - 키페어 있는 경로로 이동
                - aws 연결에서 ssh client의 접속 url 복사
                - cmd 창에서 접속
                ---> aws에 앱 배포

        2) aws에 앱 배포
            1단계: 개발된 소스 github에 업로드
            2단계: github으로부터 서비스 소스를 aws에 다운로드
                linux에서 외부 원격 파일 다운로드 방식
                $ wget 자원url
                $ wget https://raw.githubusercontent.com/ITkim/hello-world/master/app.py
            3단계: 다운로드 받은 내용 확인
                $ ls
            4단계: aws의 python 실행 환경 확인
                $ python3 --version
                $ pip3 list
                Flask 다운로드
                $ pip3 install flask
            5단계: flask app.py 실행
                $ python3 app.py
                콘솔 창에 ip 등 서비스 가능 메세지 출력
                콘솔에 출력된 ip는 aws 서비스들끼리만 소통되는 private ip
                외부 브라우저로 일반 end user가 접속하기 위해서는 퍼블릭 IPv4 주소로 서비스 url 확인

        3) 주의사항
            github로부터 파일을 개별 다운로드 받을 경우 링크 조절 필수
            개별 소스의 'raw'버튼 클릭 수에 raw 형식으로 url 복사해서 wget으로 다운로드
