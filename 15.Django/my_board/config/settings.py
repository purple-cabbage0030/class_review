"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ''

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bootstrap4',
    'board',
    'account',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True

#################################################################################
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
# app디렉토리/static/app이름 디렉토리 아래에는 파일들 저장하는 역할만
# python manage.py collectstatic 명령어로 static root directory에 모은 뒤 서비스한다
#################################################################################
STATIC_ROOT = os.path.join(BASE_DIR, 'statics')   # static 파일들을 모을 root 경로 - 서비스를 위한 경로
STATIC_URL = '/static/'   # client에서 static 파일들을 요청할 url의 시작 path

# app/static 이외의 디렉토리에 static 파일들을 저장할 경우 그 디렉토리를 정의
# app 상관 없이 공통적으로 사용하거나 메인페이지 관련 static 파일들을 저장할 경로 설정
STATICFILES_DIRS = []

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#################################################################################
# 사용자 인증 관련 설정
#################################################################################
# CustomUser 모델 등록: 문자열로 등록. (app이름.모델클래스이름) - models모듈명은 넣지 않는다
AUTH_USER_MODEL = 'account.CustomUser'

# 로그인 성공 처리 후 이동할 url
LOGIN_REDIRECT_URL = '/'
# 로그아웃 성공 처리 후 이동할 url
LOGOUT_REDIRECT_URL = '/'

# 로그인 상태에서 요청 가능한 view를 로그인하지 않고 요청했을 때 이동할 url
# login_form을 요청하는 url 등록
LOGIN_URL = '/account/login'

#################################################################################
# media 파일 (upload된 파일) 경로 설정
#################################################################################
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')   # 업로드된 파일들이 저장될 root 디렉토리
MEDIA_URL = '/media/'   # client(template)에서 업로드될 파일을 요청할 때 사용할 시작 url


